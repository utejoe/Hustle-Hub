
🧩 GOAL:
Connect backend to frontend (Campus Hustle App) so users can:

- Register/login
- View listings
- Boost listings
- Chat
- Place orders
- Admin approve/reject listings (if there's an admin panel later)

✅ CURRENT FRONTEND STRUCTURE (Assumed based on past context)

- React app (modular structure)
- CSS via global variables
- Pages: Home, Listings, Dashboard, Profile
- Components stored in folders (/Components/...)

🎯 WHAT TO WORK ON FIRST — PRIORITY FLOW

🔹 1. Auth Integration
✅ Register / Login users  
✅ Store JWT in localStorage  
✅ Redirect and protect vendor/user routes  
✅ Use token for authenticated requests

Start Here:
- Create api/auth.js service
- Set up useAuth() context or hook
- Test login → get token → store in localStorage

🔹 2. Fetch Listings
✅ Home or Browse Listings page  
✅ Show cards by category/school  
✅ Use filter like /api/listings?school=UNILAG&category=Photography

What to do:
- Create api/listings.js
- Fetch and render listings
- Support filtering/search

🔹 3. Create Listing (Vendor Only)
✅ Create form to post listing  
✅ Use token to POST /api/listings

🛠️ SUGGESTED TASK ORDER FOR FRONTEND

| Step | Feature | API | Page |
|------|---------|-----|------|
| 1️⃣ | User Login / Signup | /api/auth/... | AuthContext + Login/Register pages |
| 2️⃣ | Display Listings | GET /api/listings | Home, Browse, or Search page |
| 3️⃣ | Filter by School/Category | GET /api/listings?school=...&category=... | Same |
| 4️⃣ | Listing Details | GET /api/listings/:id | ListingDetailsPage |
| 5️⃣ | Create Listing (vendor only) | POST /api/listings | AddListingPage |
| 6️⃣ | Boost Listing (if vendor) | PUT /api/listings/:id/boost | MyListings / Boost CTA |
| 7️⃣ | Chat Between Users | POST /api/chats, GET /api/chats/... | ChatPage |
| 8️⃣ | Place Order | POST /api/orders | ListingDetails or OrderPage |
| 9️⃣ | Admin Approve/Reject | PUT /api/admin/... | AdminDashboard (if planned) |

🚀 LET’S START WITH STEP 1: AUTH
